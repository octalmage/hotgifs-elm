var _user$project$Main$decodeGifUrl = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'image_url',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$onKeyDown = function (event) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$map, event, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {topic: a, gifUrl: b};
	});
var _user$project$Main$init = function (topic) {
	return {
		ctor: '_Tuple2',
		_0: A2(_user$project$Main$Model, topic, 'https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif'),
		_1: _elm_lang$core$Platform_Cmd$none
	};
};
var _user$project$Main$NewGif = function (a) {
	return {ctor: 'NewGif', _0: a};
};
var _user$project$Main$getRandomGif = function (topic) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=', topic);
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$NewGif,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeGifUrl));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'UpdateTopic':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'KeyDown':
				return _elm_lang$core$Native_Utils.eq(_p0._0, 13) ? {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$getRandomGif(model.topic)
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'MorePlease':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$getRandomGif(model.topic)
				};
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: A2(_user$project$Main$Model, model.topic, _p0._0._0),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Main$KeyDown = function (a) {
	return {ctor: 'KeyDown', _0: a};
};
var _user$project$Main$UpdateTopic = function (a) {
	return {ctor: 'UpdateTopic', _0: a};
};
var _user$project$Main$MorePlease = {ctor: 'MorePlease'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.topic),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(model.topic),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateTopic),
							_1: {
								ctor: '::',
								_0: _user$project$Main$onKeyDown(_user$project$Main$KeyDown),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$MorePlease),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onSubmit(_user$project$Main$MorePlease),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Search'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(model.gifUrl),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init(''),
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: _user$project$Main$subscriptions
	})();
