var _user$project$Main$decodeGifUrl = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'image_url',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$onKeyUp = function (event) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keyup',
		A2(_elm_lang$core$Json_Decode$map, event, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Main$onKeyDown = function (event) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$map, event, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Main$loadingGif = 'https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif';
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {topic: a, gifUrl: b, enterKeyDown: c};
	});
var _user$project$Main$init = function (topic) {
	return {
		ctor: '_Tuple2',
		_0: A3(_user$project$Main$Model, topic, '', false),
		_1: _elm_lang$core$Platform_Cmd$none
	};
};
var _user$project$Main$NoOp = {ctor: 'NoOp'};
var _user$project$Main$preventDefaultUpDown = function () {
	var filterKey = function (code) {
		return _elm_lang$core$Native_Utils.eq(code, 9) ? _elm_lang$core$Json_Decode$succeed(code) : _elm_lang$core$Json_Decode$fail('ignored input');
	};
	var decoder = A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Basics$always(_user$project$Main$NoOp),
		A2(_elm_lang$core$Json_Decode$andThen, filterKey, _elm_lang$html$Html_Events$keyCode));
	var options = _elm_lang$core$Native_Utils.update(
		_elm_lang$html$Html_Events$defaultOptions,
		{preventDefault: true});
	return A3(_elm_lang$html$Html_Events$onWithOptions, 'keydown', options, decoder);
}();
var _user$project$Main$NewGif = function (a) {
	return {ctor: 'NewGif', _0: a};
};
var _user$project$Main$getRandomGif = function (topic) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=', topic);
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$NewGif,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeGifUrl));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'UpdateTopic':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'KeyDown':
				var _p1 = _p0._0;
				return (_elm_lang$core$Native_Utils.eq(_p1, 13) && (!model.enterKeyDown)) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{enterKeyDown: true, gifUrl: _user$project$Main$loadingGif}),
					_1: _user$project$Main$getRandomGif(model.topic)
				} : ((_elm_lang$core$Native_Utils.eq(_p1, 9) && model.enterKeyDown) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{gifUrl: _user$project$Main$loadingGif}),
					_1: _user$project$Main$getRandomGif(model.topic)
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none});
			case 'KeyUp':
				return _elm_lang$core$Native_Utils.eq(_p0._0, 13) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{enterKeyDown: false}),
					_1: _elm_lang$core$Platform_Cmd$none
				} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'FetchGif':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$getRandomGif(model.topic)
				};
			case 'NewGif':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: A3(_user$project$Main$Model, model.topic, _p0._0._0, model.enterKeyDown),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$KeyUp = function (a) {
	return {ctor: 'KeyUp', _0: a};
};
var _user$project$Main$KeyDown = function (a) {
	return {ctor: 'KeyDown', _0: a};
};
var _user$project$Main$UpdateTopic = function (a) {
	return {ctor: 'UpdateTopic', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$Main$preventDefaultUpDown,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$value(model.topic),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateTopic),
						_1: {
							ctor: '::',
							_0: _user$project$Main$onKeyDown(_user$project$Main$KeyDown),
							_1: {
								ctor: '::',
								_0: _user$project$Main$onKeyUp(_user$project$Main$KeyUp),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$br,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$img,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$src(model.gifUrl),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'display',
											_1: model.enterKeyDown ? 'block' : 'none'
										},
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init(''),
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: _user$project$Main$subscriptions
	})();
var _user$project$Main$FetchGif = {ctor: 'FetchGif'};
